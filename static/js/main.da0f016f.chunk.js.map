{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","myText","setText","style","color","rows","onChange","event","target","value","backgroundColor","console","log","newtext","toUpperCase","toLowerCase","split","length","App","setMode","Fragment","document","body","background","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.da0f016f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"\">\r\n      <nav\r\n        className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">About</a>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                onClick={props.toggleMode}\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [myText, setText] = useState(\"\");\r\n  let upperUpClick = () => {\r\n    console.log(\"upper is clicked\");\r\n    let newtext = myText.toUpperCase();\r\n    setText(newtext);\r\n  };\r\n\r\n  let upperLowClick = () => {\r\n    console.log(\"upper is clicked\");\r\n    let newtext = myText.toLowerCase();\r\n    setText(newtext);\r\n  };\r\n\r\n  let clearText = () =>{\r\n    setText('');\r\n  }\r\n\r\n  let upperLevel = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"container my-3\" style={{color: props.mode === 'dark'? 'white':'black'}}>\r\n      <div className=\"mb-3\">\r\n        <h2>Type the text to analyze</h2>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          onChange={upperLevel}\r\n          style = {{backgroundColor: props.mode === 'dark'? 'grey':'white',\r\n          color: props.mode === 'dark'? 'white':'black'}}\r\n          value={myText}\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-3\" onClick={upperUpClick}>\r\n          UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={upperLowClick}>\r\n          UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={clearText}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <h2>Summary</h2>\r\n      <p>The text has {myText.split('.').length} Sentences {myText.split(' ').length} words and {myText.length} characters and required {0.008 * myText.length} times</p>\r\n      <h2>Preview</h2>\r\n      <p>{myText.length>0?myText: 'Enter your Text to preview'}</p>\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\n// import About from \"./components/About\";\nimport { useState } from \"react\";\n\nimport React from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  let title = \"TextUtilis\";\n  const [mode, setMode] = useState(\"light\");\n  // const toggleMode = () =>{\n\n  //   if (Mode === 'light'){\n  //     setMode('dark')\n  //     console.log('o bai light')\n  //   }\n  //   else{\n  //     setMode('Light')\n  //     console.log('o bai dark')\n  //   }\n  // }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#042743\";\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n\n      // setInterval(() => {\n      //   document.title = \"Textutlis is very good\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install Textutilis now\"\n      // }, 1500);\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title={title} mode={mode} toggleMode={toggleMode} />\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element = {<About />}>    */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\" element = {<Textform mode={mode} />}> */}\n          <Textform mode={mode} />\n          {/* </Route> */}\n          {/* </Routes> */}\n      {/* </Router> */}\n\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}